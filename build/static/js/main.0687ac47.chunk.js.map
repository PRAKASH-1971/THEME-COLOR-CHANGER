{"version":3,"sources":["My Components/About.js","My Components/Navbar.js","My Components/Textform.js","My Components/Alert.js","App.js","index.js"],"names":["About","props","mystyle","color","mode","backgroundColor","borderColor","className","style","id","type","Navbar","to","title","href","role","txt","placeholder","onClick","cgmd","htmlFor","Textformo","useState","text","setText","all_buttons","document","getElementsByTagName","heading","value","rows","plc","onChange","event","target","split","filter","element","length","disabled","newtext","toUpperCase","showAlert","nwtxt","toLowerCase","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","ExS","join","i","classList","remove","add","buttonsRed","buttonsGreen","choices","randomNumber","Math","floor","random","buttonreset","width","display","flexDirection","maxWidth","overflowWrap","Alert","height","alert","tpe","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","setInterval","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.0687ac47.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    let mystyle = {\r\n        color: props.mode ==='dark'?'white':'#042743',\r\n        backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white',\r\n        // border:'2px solid',\r\n        borderColor: props.mode === 'dark'?'white':'#042743'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h3 className=\"my-2\" style={{ color: props.mode ==='dark'?'white':'#042743'}} >About us</h3>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={mystyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Accordion Item #1</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" style={mystyle} data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the accordion-body though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>  Accordion Item #2</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={mystyle} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the accordion-body though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Accordion Item #3</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" style={mystyle} data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the accordion-body, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react' //imr\r\nimport PropTypes from 'prop-types'; //impt\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  \r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                {props.txt}\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                <li><hr className=\"dropdown-divider\" /></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex me-2\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className={`btn  btn-${props.mode==='light'?'dark':'light'}, text-${props.mode==='light'?'dark':'light'} `} type=\"submit\" >Search</button> {/*{isBackgroundRed ? 'background-red' : 'background-blue'}*/}\r\n          </form>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.cgmd} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n  //\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  txt: PropTypes.string\r\n}   //we are clearing here the Specific type\r\n\r\n// Navbar.defaultProps ={\r\n//     title:'I am Here',\r\n//     txt:'About text here'\r\n// };  to make it work you should not have to pass values in App.js \r\n","import React, { useState } from 'react' //imrs\r\n\r\n\r\nexport default function Textformo(props) {\r\n    const [text, setText] = useState(\"\");\r\n    // const [color, setColor] = useState(\"\")\r\n    //const [displayUb,setDisplayUb]=useState(\"none\");\r\n    //const [displayLb,setDisplayLb]= useState(\"none\");\r\n\r\n    const touppercase = () => {\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        // setDisplayUb(\"none\");\r\n        props.showAlert(\"Converted to UpperCase\", \"primary\")\r\n    }\r\n\r\n    const tolowercase = () => {\r\n        let nwtxt = text.toLowerCase();\r\n        setText(nwtxt);\r\n        // setDisplayUb(\"none\");\r\n        props.showAlert(\"Converted to LowerCase\", \"danger\")\r\n    }\r\n\r\n    const handleonchange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const Clear = () => {\r\n        let ntt = '';\r\n        setText(ntt);\r\n        props.showAlert(\"Text is Cleared\", \"primary\")\r\n\r\n    }\r\n\r\n    const Copy = () => {\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();//to avoid the text selection\r\n        props.showAlert(\"Text is Copied\", \"danger\")\r\n\r\n    }\r\n\r\n    const extspc = () => {\r\n        let ExS = text.split(/[ ]+/);\r\n        setText(ExS.join(\" \"))\r\n        props.showAlert(\"Extraspaces is Removed\", \"primary\")\r\n    }\r\n\r\n\r\n    var all_buttons = document.getElementsByTagName('button');\r\n   \r\n\r\n    const buttonsRed = () => {\r\n        // setColor(\"btn-danger\")\r\n        for (let i = 0; i < all_buttons.length; i++) {\r\n            all_buttons[i].classList.remove(all_buttons[i].classList[1]);\r\n            all_buttons[i].classList.add('btn-danger');\r\n        }\r\n    }\r\n\r\n    const buttonsGreen = () => {\r\n        // setColor(\"btn-success\")\r\n\r\n        for (let i = 0; i < all_buttons.length; i++) {\r\n            all_buttons[i].classList.remove(all_buttons[i].classList[1]);\r\n            all_buttons[i].classList.add('btn-success');\r\n        }\r\n    }\r\n\r\n    function buttonreset() {\r\n        let choices = [\"btn-primary\", \"btn-success\", \"btn-danger\", \"btn-warning\"]\r\n        for (let i = 0; i < all_buttons.length; i++) {\r\n            let randomNumber = Math.floor(Math.random() * 4);\r\n            all_buttons[i].classList.remove(all_buttons[i].classList[1]);\r\n            all_buttons[i].classList.add(choices[randomNumber]);\r\n        }\r\n    }\r\n\r\n\r\n    // console.log(opt)\r\n    // if(value === 'red') {\r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container mb-3 mt-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n            <h4 id=\"red\">{props.heading}</h4>\r\n            <textarea className=\"form-control\" value={text} id=\"mybox\" rows=\"8\" style={{ backgroundColor: props.mode === 'dark' ? '#13466e ' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} placeholder={props.plc} onChange={handleonchange}></textarea>\r\n            <p>{text.split(\" \").filter((element) => { return element.length !== 0 }).length} words  &  {text.length} characters </p>{/* filtert(\" \") means if the func in filter is true then only show the text.split(\" \") in an Array */}\r\n            {/* <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to Read</p> */}\r\n            <button disabled={text.length===0} className={`btn btn-success mt-1 my-2`} onClick={touppercase}>UpperCase</button>\r\n            <button disabled={text.length===0} className={`btn btn-primary mt-1 mx-3 my-2`} onClick={tolowercase}>LowerCase</button>\r\n            <button disabled={text.length===0} className={`btn btn-danger mt-1 mx-3 my-2`} onClick={Clear}>Clear</button>\r\n            <button disabled={text.length===0} className={`btn btn-warning mt-1 mx-3 my-2`} onClick={Copy}>Copy Text</button>\r\n            <button disabled={text.length===0} className={`btn btn-success mt-1 mx-3 my-2`} onClick={extspc}>Remove Extra Space</button>\r\n            <div className=\"nav-item dropdown ms-0 \" >\r\n                <button className=\" btn btn-primary nav-link dropdown-toggle mt-2\" style={{ color: \"#fff\" }} id=\"navbarDropdown\" role=\"button\"  disabled={text.length===0} data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <a>Select button Colors</a>\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <li className=\"dropdown-item\" onClick={() => { buttonsRed() }}> Red</li>\r\n                    <li className=\"dropdown-item\" onClick={() => { buttonsGreen() }}> Green</li>\r\n                    <li className=\"dropdown-item\" onClick={() => { buttonreset() }}>random</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div className=\"container \" rows=\"8\" style={{color:props.mode==='dark'?'white':'#042743', width:\"100%\", display:\"flex\", flexDirection:\"column\"}}>\r\n            <h2>Preview</h2>\r\n            <p style={{maxWidth:\"100%\",overflowWrap: \"break-word\"}}>{ text.length > 0 ? text : \"Nothing to Preview\" }</p>\r\n\r\n        </div>\r\n        </>\r\n\r\n       \r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\n function Alert(props){\r\n   const capitalize = (word) => {\r\n       const lower = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n   }\r\n\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n       { props.alert && <div className={`alert alert-${props.alert.tpe} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.tpe)}</strong> : {props.alert.msg} \r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import { useState } from 'react';\nimport './App.css';\nimport About from './My Components/About';\nimport Navbar from './My Components/Navbar';\nimport Textform from './My Components/Textform';\nimport Alert from './My Components/Alert';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      tpe: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n\n  const changeMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been Enabled\", \"success\")\n      document.title = 'PAKKU - Dark Mode'\n      setInterval(() => {\n        document.title = \"PAKKU_Amazing Mode\"\n      }, 2000);\n      setInterval(() => {\n        document.title = \"PAKKU_Try Now\"\n      }, 1500)\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been Enabled\", \"danger\")\n      document.title = 'PAKKU - Light Mode' // to change the web-title\n    }\n  }\n  \n  return (\n    <>\n      <Router>\n        <Navbar title=\"PAKKU\" txt=\"Select\" mode={mode} cgmd={changeMode} />\n        <Alert alert={alert} />\n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <Textform heading=\"Enter the text Below\" plc=\"Enter any text Here To Enable Buttons\" mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}